================================================================================
CREATE statement
================================================================================

CREATE TABLE "tblsample" (
  "id" int(11) NOT NULL,
  "recid" int(11) NOT NULL default '0',
  "cvfilename" varchar(250)  NOT NULL default '',
  "cvpagenumber"  int(11) NULL,
  "cilineno" int(11)  NULL,
  "batchname"  varchar(100) NOT NULL default '',
  "type" varchar(20) NOT NULL default '',
  "data" varchar(100) NOT NULL default ''
);

--------------------------------------------------------------------------------

(source_file
  (create_table_statement
    (identifier)
    (table_parameters
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL)))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content))))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content))))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL)))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL)))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content))))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content))))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content)))))))

================================================================================
CREATE TABLE
================================================================================

CREATE TABLE tblsample
(
  id int(11) NOT NULL,
  recid int(11) NOT NULL default '0',
  cvfilename varchar(250)  NOT NULL default '',
  cvpagenumber  int(11) NULL,
  cilineno int(11)  NULL,
  "batchname"  varchar(100) NOT NULL default '',
  "type" varchar(20) NOT NULL default '',
  "data" varchar(100) NOT NULL default ''
)

--------------------------------------------------------------------------------

(source_file
  (create_table_statement
    (identifier)
    (table_parameters
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL)))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content))))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content))))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL)))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL)))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content))))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content))))
      (table_column
        (identifier)
        (type
          (identifier)
          (number))
        (null_constraint
          (NULL))
        (default_clause
          (string
            (content))))
          )))

================================================================================
CREATE statement with array type
================================================================================

CREATE TABLE "tblsample" (
  col1 INTEGER[],
  col2 INTEGER[3],
  col3 INTEGER[][],
  col4 INTEGER[3][3]
);

--------------------------------------------------------------------------------

(source_file
  (create_table_statement
    (identifier)
    (table_parameters
      (table_column
        (identifier)
        (array_type
          (type
            (identifier))))
      (table_column
        (identifier)
        (array_type
          (type
            (identifier))
          (number)))
      (table_column
        (identifier)
        (array_type
          (type
            (identifier))))
      (table_column
        (identifier)
        (array_type
          (type
            (identifier))
          (number)
          (number))))))

================================================================================
CREATE statement with VARYING, PRECISION, WITH/WITHOUT TIME ZONE types
================================================================================

CREATE TABLE "tblsample" (
  col1 CHARACTER VARYING,
  col2 CHARACTER VARYING(10),
  col3 DOUBLE PRECISION,
  col4 TIMESTAMP WITH TIME ZONE,
  col5 TIMESTAMP WITHOUT TIME ZONE
);

--------------------------------------------------------------------------------

(source_file
  (create_table_statement
    (identifier)
    (table_parameters
      (table_column
        (identifier)
        (type
          (identifier)))
      (table_column
        (identifier)
        (type
          (identifier)
          (number)))
      (table_column
        (identifier)
        (type
          (identifier)))
      (table_column
        (identifier)
        (type
          (identifier)))
      (table_column
        (identifier)
        (type
          (identifier))))))

================================================================================
CREATE FUNCTION with return statement
================================================================================

CREATE FUNCTION add(a INTEGER, b INTEGER) RETURNS INTEGER
    RETURN a + b;

--------------------------------------------------------------------------------

(source_file
  (create_function_statement
    (identifier)
    (create_function_parameters
      (create_function_parameter
        (identifier)
        (type
          (identifier)))
      (create_function_parameter
        (identifier)
        (type
          (identifier))))
    (type
      (identifier))
    (function_body
      (return_statement
        (binary_expression
          (identifier)
          (identifier))))))

================================================================================
CREATE FUNCTION with single statement
================================================================================

CREATE FUNCTION foo()
  RETURNS INT
SELECT 0;

--------------------------------------------------------------------------------

(source_file
  (create_function_statement
    (identifier)
    (create_function_parameters)
    (type
      (identifier))
    (function_body
      (select_statement
        (select_clause
          (select_clause_body
            (number)))))))

================================================================================
CREATE FUNCTION with compound statement
================================================================================

CREATE OR REPLACE FUNCTION foo(n int)
  RETURNS SETOF text
BEGIN ATOMIC
SELECT repeat('*');
END;

--------------------------------------------------------------------------------

(source_file
  (create_function_statement
    (identifier)
    (create_function_parameters
      (create_function_parameter
        (identifier)
        (type
          (identifier))))
    (setof
      (type
        (identifier)))
    (function_body
      (select_statement
        (select_clause
          (select_clause_body
            (function_call
              (identifier)
              (string
                (content)))))))))

================================================================================
CREATE FUNCTION with declare variable
================================================================================

CREATE FUNCTION foo(IN  a INT)
RETURNS VARCHAR(20)
BEGIN
  DECLARE x DEC(10,2) DEFAULT 0;
  SELECT c INTO x FROM table1 WHERE col1 = a;
  RETURN func(x);
END

--------------------------------------------------------------------------------

(source_file
  (create_function_statement
    (identifier)
    (create_function_parameters
      (create_function_parameter
        (identifier)
        (type
          (identifier))))
    (type
      (identifier)
      (number))
    (function_body
      (declare_statement
        (identifier)
        (type
          (identifier)
          (number)
          (number))
        (default_clause
          (number)))
      (select_statement
        (select_clause
          (select_clause_body
            (identifier)
            (identifier)))
        (from_clause
          (identifier))
        (where_clause
          (binary_expression
            (identifier)
            (identifier))))
      (return_statement
        (function_call
          (identifier)
          (identifier))))))

================================================================================
CREATE FUNCTION without return type
================================================================================

CREATE PROCEDURE foo(OUT b VARCHAR(20))
BEGIN
  SET b = func(1);
END

--------------------------------------------------------------------------------

(source_file
  (create_function_statement
    (identifier)
    (create_function_parameters
      (create_function_parameter
        (identifier)
        (type
          (identifier)
          (number))))
    (function_body
      (set_statement
        (identifier)
        (function_call
          (identifier)
          (number))))))

================================================================================
CREATE VIEW
================================================================================

CREATE VIEW foo AS SELECT 1;
CREATE VIEW foo AS (SELECT 1);
CREATE OR REPLACE VIEW foo AS SELECT 1;
CREATE TEMPORARY VIEW foo AS SELECT 1;
CREATE TEMP VIEW foo AS SELECT 1;

--------------------------------------------------------------------------------

(source_file
  (create_view_statement
    (identifier)
    (view_body
      (select_statement
        (select_clause
          (select_clause_body
            (number))))))
  (create_view_statement
    (identifier)
    (view_body
      (select_subexpression
        (select_statement
          (select_clause
            (select_clause_body
              (number)))))))
  (create_view_statement
    (identifier)
    (view_body
      (select_statement
        (select_clause
          (select_clause_body
            (number))))))
  (create_view_statement
    (identifier)
    (view_body
      (select_statement
        (select_clause
          (select_clause_body
            (number))))))
  (create_view_statement
    (identifier)
    (view_body
      (select_statement
        (select_clause
          (select_clause_body
            (number)))))))

================================================================================
CREATE VIEW with columns
================================================================================

CREATE VIEW foo(a, b) AS SELECT 1 a, 2 b;

--------------------------------------------------------------------------------

(source_file
  (create_view_statement
    (identifier)
    (view_columns
      (identifier)
      (identifier))
    (view_body
      (select_statement
        (select_clause
          (select_clause_body
            (number)
            (alias
              (identifier))
            (number)
            (alias
              (identifier))))))))

================================================================================
CREATE VIEW by value clause
================================================================================

CREATE VIEW foo AS VALUES (1, 2);

--------------------------------------------------------------------------------

(source_file
  (create_view_statement
    (identifier)
    (view_body
      (values_clause
        (values_clause_item
          (number)
          (number))))))

================================================================================
CREATE VIEW with options
================================================================================

CREATE VIEW foo WITH(security_barrier) AS SELECT 1;

--------------------------------------------------------------------------------

(source_file
  (create_view_statement
    (identifier)
    (view_options
      (view_option
        (identifier)))
    (view_body
      (select_statement
        (select_clause
          (select_clause_body
            (number)))))))

================================================================================
CREATE VIEW with check option
================================================================================

CREATE VIEW foo AS SELECT 1 WITH CHECK OPTION;
CREATE VIEW foo AS SELECT 1 WITH LOCAL CHECK OPTION;
CREATE VIEW foo AS SELECT 1 WITH CASCADED CHECK OPTION;

--------------------------------------------------------------------------------

(source_file
  (create_view_statement
    (identifier)
    (view_body
      (select_statement
        (select_clause
          (select_clause_body
            (number)))))
    (view_check_option))
  (create_view_statement
    (identifier)
    (view_body
      (select_statement
        (select_clause
          (select_clause_body
            (number)))))
    (view_check_option))
  (create_view_statement
    (identifier)
    (view_body
      (select_statement
        (select_clause
          (select_clause_body
            (number)))))
    (view_check_option)))

